Time Complexity --- O(n)
Space Complexity --- O(h) avg | O(n) worst


class BinaryTree:
    def __init__(self, value, left=None, right=None):
        self.value = value
        self.left = left
        self.right = right


def binaryTreeDiameter(tree):
  return calculateDiameter(tree).diameter

class TreeInfo:
  def __init__(self, diameter, height):
    self.diameter = diameter
    self.height   = height
    
def calculateDiameter(tree):
  if tree is None:
    return TreeInfo(0,0)
  
  leftTreeInfo = calculateDiameter(tree.left)
  rightTreeInfo = calculateDiameter(tree.right)
  
  maxLongestPath = leftTreeInfo.height + rightTreeInfo.height
  diameter = max(leftTreeInfo.diameter, rightTreeInfo.diameter, maxLongestPath)
  height = 1+ max(leftTreeInfo.height,rightTreeInfo.height)
  return TreeInfo(diameter,height)

  
